pipeline {
   agent any
   environment {
       GOCACHE = "/tmp"
   }
   stages {
       stage('Unit tests') {
           parallel {
               stage('test-with-terratest-plugin') {
                   steps {
                     git changelog: false, poll: false, url: 'https://github.com/gruntwork-io/terratest-helm-testing-example.git'
                     sh 'pwd'
                     sh 'echo $PATH'
                     sh 'cd test; pwd; go test minimal_pod_integration_test.go -v -short'
                   }
               }
               stage('test-with-sonobuoy-plugin') {
                   steps {
                     sh 'sonobuoy delete --wait;sonobuoy run --wait --mode quick; results=$(sonobuoy retrieve);sonobuoy results $results'
                   }
               }
               stage('check-for-existing-pods-health') {
                   steps {
                     sh '''
                      k8sPodChecker=$(kubectl get pods --all-namespaces --field-selector=status.phase!=Running | grep -iv COMPLETED |  grep -iv NAMESPACE | wc -l)
                      if [[ ${k8sPodChecker} -gt 0 ]];
                      then
                        echo "[FAILURE] The Cluster contain errored pods. Please check"
                        exit ${k8sPodChecker}
                      else
                        echo "[SUCCESS] The cluster has no errored pods.
                      '''
                   }
               }
       }
   }
}
}